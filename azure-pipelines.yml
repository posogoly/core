# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'


steps:
- task: UseDotNet@2
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'

#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'test'
#    projects: '**/*Tests*.csproj'

# Archive files
# Compress files into .7z, .tar.gz, or .zip

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output functions_output'
    projects: 'Functions/*.csproj'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/functions_output"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

- task: CopyFiles@2
  inputs:
    SourceFolder: 'Infrastructure/'
    Contents: '**'
    TargetFolder: '$(System.DefaultWorkingDirectory)/Infrastructure'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'

