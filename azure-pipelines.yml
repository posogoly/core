# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'


steps:
- task: UseDotNet@2
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'

#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'test'
#    projects: '**/*Tests*.csproj'

# Archive files
# Compress files into .7z, .tar.gz, or .zip

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output functions_output'
    projects: 'Functions/*.csproj'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/functions_output"
    includeRootFolder: false
    archiveFile: "$(Build.ArtifactStagingDirectory)/build$(Build.BuildId).zip"

- task: CopyFiles@2
  inputs:
    SourceFolder: 'Infrastructure/'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Infrastructure'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

- task: AzureFunctionApp@1
  inputs:
    azureSubscription: 'PosologyCore (121351d1-abb6-410e-8c74-18acd30cc035)'
    appType: functionApp
    appName: 'posology-dev'
    #Uncomment the next lines to deploy to a deployment slot
    #deployToSlotOrASE: true
    resourceGroupName: 'posology-development'
    #slotName: '<Slot name>'
